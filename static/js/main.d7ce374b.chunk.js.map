{"version":3,"sources":["components/Background.tsx","store.ts","hooks.ts","components/FiltersPanel.tsx","components/navigator/CustomSlider.tsx","components/navigator/NumberInputField.tsx","components/navigator/NavigationController.tsx","components/App.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["Background","bgRef","useRef","className","styles","container","iconContainer","icon","ref","img","draggable","onDragOver","e","preventDefault","onDrop","files","dataTransfer","reader","FileReader","onloadend","current","style","backgroundImage","result","readAsDataURL","css","filterState","atom","key","default","filterZeroZIndex","selector","get","map","filter","uid","width","height","blur","borderRadius","color","zIndex","useFilterProps","useRecoilState","filters","setFilters","filterProps","find","setFilterProps","newProps","anotherFilters","anotherFilterProps","FiltersPanel","screenRef","useRecoilValue","filterId","FilterPlane","props","useResizeDetector","skipOnMount","resizeDetectorRef","useState","resizing","setResizing","hoveredHelper","setHoveredHelper","helperMouseDownRef","setValidatedFilterSize","useCallback","resizedWidth","Math","min","window","innerWidth","resizedHeight","innerHeight","useEffect","resizeHandler","addEventListener","removeEventListener","motion","div","drag","dragPropagation","dragConstraints","dragMomentum","onClick","onDoubleClick","cx","helper","resizeGuaider","onMouseEnter","onMouseLeave","onMouseUp","onMouseDown","r","g","b","a","CustomSlider","label","unit","currentValue","range","disabled","max","value","setValue","Typography","variant","gutterBottom","sx","sliderContainer","Slider","aria-label","size","valueLabelDisplay","marks","onChange","event","newValue","text","NumberInputField","inputRef","TextField","type","fullWidth","InputLabelProps","shrink","InputProps","endAdornment","InputAdornment","position","marginLeft","inputProps","textAlign","helperText","validationMessage","parseInt","target","NavigationController","setFilter","useSetRecoilState","zeroZIndexFilters","activeFilter","deleteFitler","length","useDeleteFilter","windowSize","setWindowSize","active","setActive","updateRef","intervalId","setInterval","clearInterval","widthChangeHandler","heightChangeHandler","screen","activeScreen","closeButton","stopPropagation","close","controller","activeController","btnContainer","Button","newFilter","randomstring","generate","inputContainer","mt","linkButtonContainer","IconButton","App","ThemeProvider","theme","darkTheme","createTheme","palette","mode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.d7ce374b.chunk.js","sourcesContent":["import React, { useRef, VFC } from 'react';\r\nimport { RiImageAddFill } from 'react-icons/ri';\r\nimport { css } from '@emotion/css';\r\n\r\nexport const Background: VFC = () => {\r\n\tconst bgRef = useRef<HTMLDivElement>(null)\r\n\r\n\tconst dropEnterHandler = (e: React.DragEvent<HTMLDivElement>) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tconst files = e.dataTransfer.files\r\n\t\tif (files && files[0]) {\r\n\t\t\tconst reader = new FileReader()\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tbgRef.current!.style.backgroundImage = `url(${reader.result})`\r\n\t\t\t}\r\n\t\t\treader.readAsDataURL(files[0])\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<div className={styles.iconContainer}>\r\n\t\t\t\t<RiImageAddFill className={styles.icon} />\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tref={bgRef}\r\n\t\t\t\tclassName={styles.img}\r\n\t\t\t\tdraggable\r\n\t\t\t\tonDragOver={e => e.preventDefault()}\r\n\t\t\t\tonDrop={dropEnterHandler}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst styles = {\r\n\tcontainer: css`\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t`,\r\n\timg: css`\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground-size: cover;\r\n\t\tbackground-position: center;\r\n\t`,\r\n\ticonContainer: css`\r\n\t\tposition: absolute;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\twidth: 15vw;\r\n\t\theight: 15vw;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.1);\r\n\t\tborder-radius: 50%;\r\n\t\tbackdrop-filter: blur(10px);\r\n\t`,\r\n\ticon: css`\r\n\t\tposition: absolute;\r\n\t\tfont-size: 10vw;\r\n\t\tcolor: #696969;\r\n\t`\r\n}\r\n","import randomstring from 'randomstring';\r\nimport { atom, selector } from 'recoil';\r\nimport { FilterProps } from './types';\r\n\r\nexport const generateDefaultFilter = (): FilterProps => {\r\n\tconst uid = randomstring.generate(10)\r\n\treturn {\r\n\t\tuid,\r\n\t\twidth: 500,\r\n\t\theight: 500,\r\n\t\tblur: 10,\r\n\t\tborderRadius: 0,\r\n\t\tcolor: { r: 255, g: 255, b: 255, a: 0.2 },\r\n\t\tzIndex: 1\r\n\t}\r\n}\r\n\r\nexport const filterState = atom<FilterProps[]>({\r\n\tkey: 'filter-list-state',\r\n\tdefault: []\r\n})\r\n\r\nexport const filterZeroZIndex = selector<FilterProps[]>({\r\n\tkey: 'filter-list-zero-z-index-state',\r\n\tget: ({ get }) => {\r\n\t\tconst filters = get(filterState)\r\n\t\treturn filters.map(filter => {\r\n\t\t\treturn {\r\n\t\t\t\tuid: filter.uid,\r\n\t\t\t\twidth: filter.width,\r\n\t\t\t\theight: filter.height,\r\n\t\t\t\tblur: filter.blur,\r\n\t\t\t\tborderRadius: filter.borderRadius,\r\n\t\t\t\tcolor: filter.color,\r\n\t\t\t\tzIndex: 0\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n","import { useRecoilState, useRecoilValue } from 'recoil';\r\nimport { filterState } from './store';\r\nimport { FilterProps } from './types';\r\n\r\n/**\r\n * uid で指定した filter へ参照するカスタムフック\r\n * @param uid filter uid\r\n * @returns properties setter\r\n */\r\nexport const useFilterProps = (uid: string) => {\r\n\tconst [filters, setFilters] = useRecoilState(filterState)\r\n\r\n\tconst setFilterProps = (newProps: FilterProps) => {\r\n\t\tlet anotherFilters = filters.filter(filter => filter.uid !== uid)\r\n\t\tif (newProps.zIndex === 1) {\r\n\t\t\t// 更新するフィルターのz-indexが1だった場合、他のフィルターのz-indexは0にする\r\n\t\t\tanotherFilters = anotherFilters.map(anotherFilterProps => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...anotherFilterProps,\r\n\t\t\t\t\tzIndex: 0\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\tsetFilters([...anotherFilters, newProps])\r\n\t}\r\n\r\n\tconst filterProps = filters.find(filter => filter.uid === uid)\r\n\r\n\treturn { filterProps, setFilterProps }\r\n}\r\n\r\n/**\r\n * active状態のfilterを取得するカスタムフック\r\n * @returns active filter\r\n */\r\nexport const useGetActiveFilter = () => {\r\n\tconst filters = useRecoilValue(filterState)\r\n\treturn { activeFilter: filters.find(filter => filter.zIndex === 1) }\r\n}\r\n\r\n/**\r\n * filterを削除する関数を返すカスタムフック\r\n * @param uid 削除対象のfilter uid\r\n * @returns delete function\r\n */\r\nexport const useDeleteFilter = (uid: string) => {\r\n\tconst [filters, setFilters] = useRecoilState(filterState)\r\n\r\n\tconst deleteFitler = () => {\r\n\t\t// 削除対象以外のfilterがあれば、最後に追加したfilterをactive状態にする\r\n\t\tlet anotherFilters = filters.filter(filter => filter.uid !== uid)\r\n\t\tlet activeFilter: FilterProps | undefined\r\n\t\tif (anotherFilters.length > 0) {\r\n\t\t\tactiveFilter = anotherFilters[anotherFilters.length - 1]\r\n\t\t\tanotherFilters = anotherFilters.filter(filter => filter.uid !== activeFilter!.uid)\r\n\t\t}\r\n\t\tif (activeFilter) {\r\n\t\t\tsetFilters([...anotherFilters, { ...activeFilter, zIndex: 1 }])\r\n\t\t} else {\r\n\t\t\t// 残りのfilterがひとつもない場合\r\n\t\t\tsetFilters([])\r\n\t\t}\r\n\t}\r\n\treturn { deleteFitler }\r\n}\r\n","import { motion } from 'framer-motion';\r\nimport React, { useCallback, useEffect, useRef, useState, VFC } from 'react';\r\nimport { useResizeDetector } from 'react-resize-detector';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { css, cx } from '@emotion/css';\r\nimport { useFilterProps } from '../hooks';\r\nimport { filterState } from '../store';\r\nimport { FilterProps } from '../types';\r\n\r\ntype FiltersPanelProps = {\r\n\tscreenRef: React.RefObject<HTMLDivElement>\r\n}\r\n\r\nexport const FiltersPanel: VFC<FiltersPanelProps> = ({ screenRef }) => {\r\n\tconst filters = useRecoilValue(filterState)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{filters.map(filter => (\r\n\t\t\t\t<FilterPlane key={filter.uid} filterId={filter.uid} screenRef={screenRef} />\r\n\t\t\t))}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n// ==============================================\r\n\r\ntype FilterPlaneProps = {\r\n\tfilterId: string\r\n\tscreenRef: React.RefObject<HTMLDivElement>\r\n}\r\n\r\nconst FilterPlane: VFC<FilterPlaneProps> = ({ filterId, screenRef }) => {\r\n\tconst { filterProps, setFilterProps } = useFilterProps(filterId)\r\n\tconst props = filterProps!\r\n\r\n\tconst { ref: resizeDetectorRef, width, height } = useResizeDetector({ skipOnMount: true })\r\n\tconst [resizing, setResizing] = useState(false)\r\n\tconst [hoveredHelper, setHoveredHelper] = useState(false)\r\n\tconst helperMouseDownRef = useRef(false)\r\n\r\n\tconst setValidatedFilterSize = useCallback(\r\n\t\t(width: number, height: number) => {\r\n\t\t\tconst resizedWidth = Math.min(window.innerWidth, width)\r\n\t\t\tconst resizedHeight = Math.min(window.innerHeight, height)\r\n\t\t\tsetFilterProps({ ...props, width: resizedWidth, height: resizedHeight })\r\n\t\t},\r\n\t\t[props, setFilterProps]\r\n\t)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (width && height && helperMouseDownRef.current) {\r\n\t\t\tsetResizing(true)\r\n\t\t\tsetValidatedFilterSize(width, height)\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [height, width])\r\n\r\n\tuseEffect(() => {\r\n\t\t// window サイズを変更した時の処理\r\n\t\tconst resizeHandler = () => {\r\n\t\t\tsetValidatedFilterSize(props.width, props.height)\r\n\t\t}\r\n\t\twindow.addEventListener('resize', resizeHandler)\r\n\t\treturn () => window.removeEventListener('resize', resizeHandler)\r\n\t}, [props, setValidatedFilterSize])\r\n\r\n\tuseEffect(() => {\r\n\t\t// resize helperのサイズを更新する\r\n\t\tresizeDetectorRef.current!.style.width = props.width + 'px'\r\n\t\tresizeDetectorRef.current!.style.height = props.height + 'px'\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [props])\r\n\r\n\tconst clickHandler = () => {\r\n\t\tsetFilterProps({ ...props, zIndex: 1 })\r\n\t}\r\n\r\n\tconst refreshResizeHelper = () => {\r\n\t\tresizeDetectorRef.current!.style.width = props.width + 'px'\r\n\t\tresizeDetectorRef.current!.style.height = props.height + 'px'\r\n\t\tsetHoveredHelper(false)\r\n\t\tsetResizing(false)\r\n\t\thelperMouseDownRef.current = false\r\n\t}\r\n\r\n\treturn (\r\n\t\t<motion.div\r\n\t\t\tclassName={styles.container}\r\n\t\t\tdrag={!resizing}\r\n\t\t\tdragPropagation\r\n\t\t\tdragConstraints={screenRef}\r\n\t\t\tdragMomentum={false}\r\n\t\t\tonClick={clickHandler}\r\n\t\t\tonDoubleClick={refreshResizeHelper}>\r\n\t\t\t{/* filter */}\r\n\t\t\t<div className={styles.filter(props)} />\r\n\t\t\t{/* helper */}\r\n\t\t\t<div\r\n\t\t\t\tref={resizeDetectorRef}\r\n\t\t\t\tclassName={cx(styles.helper(props), { [styles.resizeGuaider]: hoveredHelper })}\r\n\t\t\t\tonMouseEnter={() => setHoveredHelper(true)}\r\n\t\t\t\tonMouseLeave={() => !resizing && setHoveredHelper(false)}\r\n\t\t\t\tonMouseUp={() => {\r\n\t\t\t\t\tsetResizing(false)\r\n\t\t\t\t\thelperMouseDownRef.current = false\r\n\t\t\t\t}}\r\n\t\t\t\tonMouseDown={() => (helperMouseDownRef.current = true)}\r\n\t\t\t/>\r\n\t\t</motion.div>\r\n\t)\r\n}\r\n\r\n// ==============================================\r\n// styles\r\n\r\nconst styles = {\r\n\tcontainer: css`\r\n\t\tposition: absolute;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t`,\r\n\tfilter: (props: FilterProps) => css`\r\n\t\tposition: relative;\r\n\t\twidth: ${props.width}px;\r\n\t\theight: ${props.height}px;\r\n\t\tbackground-color: rgba(${props.color.r}, ${props.color.g}, ${props.color.b}, ${props.color.a});\r\n\t\tbackdrop-filter: blur(${props.blur}px);\r\n\t\tborder-radius: ${props.borderRadius}%;\r\n\t\tz-index: ${props.zIndex};\r\n\t`,\r\n\thelper: (props: FilterProps) => css`\r\n\t\tposition: absolute;\r\n\t\twidth: ${props.width}px;\r\n\t\theight: ${props.height}px;\r\n\t\tz-index: ${props.zIndex};\r\n\t`,\r\n\tresizeGuaider: css`\r\n\t\tborder: 2px solid red;\r\n\t\tbox-sizing: content-box;\r\n\t\tresize: both;\r\n\t\toverflow: hidden;\r\n\t`\r\n}\r\n","import React, { useEffect, useState, VFC } from 'react';\r\nimport { css } from '@emotion/css';\r\nimport { Slider, Typography } from '@mui/material';\r\n\r\ntype CustomSliderProps = {\r\n\tlabel: string\r\n\tunit: string\r\n\tcurrentValue: number\r\n\trange: [number, number]\r\n\tsetFilterProps: (value: number) => void\r\n\tdisabled?: boolean\r\n}\r\n\r\nexport const CustomSlider: VFC<CustomSliderProps> = props => {\r\n\tconst { label, unit, currentValue, range, setFilterProps, disabled = false } = props\r\n\tconst [min, max] = range\r\n\r\n\tconst [value, setValue] = useState(currentValue)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetValue(currentValue)\r\n\t}, [currentValue])\r\n\r\n\tconst handleChange = (event: Event, newValue: number | number[]) => {\r\n\t\tsetValue(newValue as number)\r\n\t\tsetFilterProps(newValue as number)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<Typography variant=\"caption\" gutterBottom sx={{ color: disabled ? '#7A7A7A' : '#B7B7B7' }}>\r\n\t\t\t\t{label}\r\n\t\t\t</Typography>\r\n\t\t\t<div className={styles.sliderContainer}>\r\n\t\t\t\t<Slider\r\n\t\t\t\t\taria-label={label}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\tmin={min}\r\n\t\t\t\t\tmax={max}\r\n\t\t\t\t\tmarks={[\r\n\t\t\t\t\t\t{ value: min, label: `${min}${unit}` },\r\n\t\t\t\t\t\t{ value: max, label: `${max}${unit}` }\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst styles = {\r\n\tcontainer: css`\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t`,\r\n\tsliderContainer: css`\r\n\t\twidth: 100%;\r\n\t\tpadding-left: 10px;\r\n\t\tpadding-right: 10px;\r\n\t`,\r\n\ttext: css`\r\n\t\tcolor: #b7b7b7;\r\n\t`\r\n}\r\n","import { useEffect, useRef, useState, VFC } from 'react';\r\nimport { InputAdornment, TextField } from '@mui/material';\r\n\r\ntype NumberInputFieldProps = {\r\n\tlabel: string\r\n\tunit: string\r\n\tcurrentValue: number\r\n\trange: [number, number]\r\n\tsetFilterProps: (value: number) => void\r\n\tdisabled?: boolean\r\n}\r\n\r\nexport const NumberInputField: VFC<NumberInputFieldProps> = props => {\r\n\tconst { label, unit, currentValue, range, setFilterProps, disabled = false } = props\r\n\tconst [min, max] = range\r\n\r\n\tconst [value, setValue] = useState(currentValue)\r\n\tconst inputRef = useRef<any>(null)\r\n\r\n\tconst changeHandler = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n\t\tvar value = parseInt(e.target.value, 10)\r\n\t\tsetValue(value)\r\n\t\t// set filter props\r\n\t\tif (min <= value && value <= max) {\r\n\t\t\tsetFilterProps(value)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetValue(currentValue)\r\n\t}, [currentValue])\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\tinputRef={inputRef}\r\n\t\t\tlabel={label}\r\n\t\t\tvariant=\"standard\"\r\n\t\t\ttype=\"number\"\r\n\t\t\tfullWidth\r\n\t\t\tvalue={value}\r\n\t\t\tdisabled={disabled}\r\n\t\t\tInputLabelProps={{ shrink: true }}\r\n\t\t\tInputProps={{\r\n\t\t\t\tendAdornment: (\r\n\t\t\t\t\t<InputAdornment position=\"start\" sx={{ marginLeft: 1 }}>\r\n\t\t\t\t\t\t{unit}\r\n\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t),\r\n\t\t\t\tinputProps: { min, max },\r\n\t\t\t\tstyle: { textAlign: 'right' }\r\n\t\t\t}}\r\n\t\t\thelperText={inputRef?.current?.validationMessage}\r\n\t\t\tonChange={changeHandler}\r\n\t\t/>\r\n\t)\r\n}\r\n","import React, { useEffect, useRef, useState, VFC } from 'react';\r\nimport { RgbaColor, RgbaColorPicker } from 'react-colorful';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport { css, cx } from '@emotion/css';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport { Button, IconButton } from '@mui/material';\r\nimport { useDeleteFilter, useFilterProps, useGetActiveFilter } from '../../hooks';\r\nimport { filterState, filterZeroZIndex, generateDefaultFilter } from '../../store';\r\nimport { CustomSlider } from './CustomSlider';\r\nimport { NumberInputField } from './NumberInputField';\r\n\r\nexport const NavigationController: VFC = () => {\r\n\t// public state\r\n\tconst setFilter = useSetRecoilState(filterState)\r\n\tconst zeroZIndexFilters = useRecoilValue(filterZeroZIndex)\r\n\tconst { activeFilter } = useGetActiveFilter()\r\n\tconst { setFilterProps } = useFilterProps(activeFilter ? activeFilter.uid : '')\r\n\tconst { deleteFitler } = useDeleteFilter(activeFilter ? activeFilter.uid : '')\r\n\t// private state\r\n\tconst [windowSize, setWindowSize] = useState([window.innerWidth, window.innerHeight])\r\n\tconst [active, setActive] = useState(true)\r\n\tconst updateRef = useRef(true)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resizeHandler = () => setWindowSize([window.innerWidth, window.innerHeight])\r\n\t\twindow.addEventListener('resize', resizeHandler)\r\n\t\treturn () => window.removeEventListener('resize', resizeHandler)\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst intervalId = setInterval(() => {\r\n\t\t\tupdateRef.current = true\r\n\t\t}, 100)\r\n\t\treturn () => clearInterval(intervalId)\r\n\t}, [])\r\n\r\n\tconst closeClickHandler = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n\t\te.stopPropagation()\r\n\t\tsetActive(false)\r\n\t}\r\n\r\n\tconst addClickHandler = () => {\r\n\t\tconst newFilter = generateDefaultFilter()\r\n\t\tsetFilter([...zeroZIndexFilters, newFilter])\r\n\t}\r\n\r\n\tconst deleteClickHandler = () => {\r\n\t\tdeleteFitler()\r\n\t}\r\n\r\n\tconst widthChangeHandler = (value: number) => {\r\n\t\tactiveFilter && setFilterProps({ ...activeFilter, width: value })\r\n\t}\r\n\r\n\tconst heightChangeHandler = (value: number) => {\r\n\t\tactiveFilter && setFilterProps({ ...activeFilter, height: value })\r\n\t}\r\n\r\n\tconst borderRadiusChangeHandler = (value: number) => {\r\n\t\tactiveFilter && setFilterProps({ ...activeFilter, borderRadius: value })\r\n\t}\r\n\r\n\tconst blurChangeHandler = (value: number) => {\r\n\t\tactiveFilter && setFilterProps({ ...activeFilter, blur: value })\r\n\t}\r\n\r\n\tconst colorChangeHandler = (e: RgbaColor) => {\r\n\t\tif (activeFilter && updateRef.current) {\r\n\t\t\t// 更新が早すぎるとバグるため、updateRefで更新間隔をあける\r\n\t\t\tsetFilterProps({ ...activeFilter, color: e })\r\n\t\t\tupdateRef.current = false\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={cx(styles.screen, { [styles.activeScreen]: active })}\r\n\t\t\tonClick={() => setActive(true)}>\r\n\t\t\t<div className={styles.container}>\r\n\t\t\t\t{/* close button */}\r\n\t\t\t\t<div className={cx({ [styles.closeButton]: active })} onClick={closeClickHandler}>\r\n\t\t\t\t\t<div className={cx({ [styles.close]: active })} />\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* controller */}\r\n\t\t\t\t<div className={cx(styles.controller, { [styles.activeController]: active })}>\r\n\t\t\t\t\t<div className={styles.btnContainer}>\r\n\t\t\t\t\t\t<Button variant=\"outlined\" onClick={addClickHandler}>\r\n\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tonClick={deleteClickHandler}\r\n\t\t\t\t\t\t\tdisabled={!activeFilter}>\r\n\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className={styles.inputContainer}>\r\n\t\t\t\t\t\t<NumberInputField\r\n\t\t\t\t\t\t\tlabel=\"Width\"\r\n\t\t\t\t\t\t\tunit=\"px\"\r\n\t\t\t\t\t\t\tcurrentValue={activeFilter ? activeFilter.width : 500}\r\n\t\t\t\t\t\t\trange={[10, windowSize[0]]}\r\n\t\t\t\t\t\t\tsetFilterProps={widthChangeHandler}\r\n\t\t\t\t\t\t\tdisabled={!activeFilter}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tdisabled={!activeFilter}\r\n\t\t\t\t\t\t\tsx={{ height: 30, mt: 2 }}\r\n\t\t\t\t\t\t\tonClick={() => widthChangeHandler(window.innerWidth)}>\r\n\t\t\t\t\t\t\tFill\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className={styles.inputContainer}>\r\n\t\t\t\t\t\t<NumberInputField\r\n\t\t\t\t\t\t\tlabel=\"Height\"\r\n\t\t\t\t\t\t\tunit=\"px\"\r\n\t\t\t\t\t\t\tcurrentValue={activeFilter ? activeFilter.height : 500}\r\n\t\t\t\t\t\t\trange={[10, windowSize[1]]}\r\n\t\t\t\t\t\t\tsetFilterProps={heightChangeHandler}\r\n\t\t\t\t\t\t\tdisabled={!activeFilter}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tdisabled={!activeFilter}\r\n\t\t\t\t\t\t\tsx={{ height: 30, mt: 2 }}\r\n\t\t\t\t\t\t\tonClick={() => heightChangeHandler(window.innerHeight)}>\r\n\t\t\t\t\t\t\tFill\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className={styles.inputContainer}>\r\n\t\t\t\t\t\t<CustomSlider\r\n\t\t\t\t\t\t\tlabel=\"Corner Roundness\"\r\n\t\t\t\t\t\t\tunit=\"%\"\r\n\t\t\t\t\t\t\tcurrentValue={activeFilter ? activeFilter.borderRadius : 0}\r\n\t\t\t\t\t\t\trange={[0, 50]}\r\n\t\t\t\t\t\t\tsetFilterProps={borderRadiusChangeHandler}\r\n\t\t\t\t\t\t\tdisabled={!activeFilter}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className={styles.inputContainer}>\r\n\t\t\t\t\t\t<CustomSlider\r\n\t\t\t\t\t\t\tlabel=\"Blur\"\r\n\t\t\t\t\t\t\tunit=\"px\"\r\n\t\t\t\t\t\t\tcurrentValue={activeFilter ? activeFilter.blur : 10}\r\n\t\t\t\t\t\t\trange={[0, 100]}\r\n\t\t\t\t\t\t\tsetFilterProps={blurChangeHandler}\r\n\t\t\t\t\t\t\tdisabled={!activeFilter}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{activeFilter ? (\r\n\t\t\t\t\t\t<RgbaColorPicker color={activeFilter.color} onChange={colorChangeHandler} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<RgbaColorPicker />\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{/* link button */}\r\n\t\t\t\t\t<div className={styles.linkButtonContainer}>\r\n\t\t\t\t\t\t<IconButton aria-label=\"git hub\" color=\"default\" size=\"large\">\r\n\t\t\t\t\t\t\t<GitHubIcon sx={{ width: 40, height: 40 }} />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n// ==============================================\r\n// styles\r\n\r\nconst styles = {\r\n\tscreen: css`\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\theight: 100%;\r\n\t\twidth: 30px;\r\n\t\topacity: 0;\r\n\t\ttransition: 0.5s;\r\n\t\tz-index: 10;\r\n\r\n\t\t&:hover {\r\n\t\t\topacity: 1;\r\n\t\t\tbackground-color: rgba(0, 0, 0, 0.6);\r\n\t\t\tcursor: pointer;\r\n\t\t}\r\n\t`,\r\n\tactiveScreen: css`\r\n\t\twidth: 400px;\r\n\t\topacity: 1;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.6);\r\n\r\n\t\t&:hover {\r\n\t\t\tcursor: auto;\r\n\t\t}\r\n\t`,\r\n\tcontainer: css`\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t`,\r\n\tcloseButton: css`\r\n\t\tposition: absolute;\r\n\t\ttop: 10px;\r\n\t\tright: 10px;\r\n\t\twidth: 50px;\r\n\t\theight: 50px;\r\n\t\tborder-radius: 50%;\r\n\t\tpadding: 8px;\r\n\t\tcursor: pointer;\r\n\t\ttransition: background-color 0.3s;\r\n\r\n\t\t&:hover {\r\n\t\t\tbackground-color: rgba(255, 255, 255, 0.2);\r\n\t\t}\r\n\t`,\r\n\tclose: css`\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\r\n\t\t&::before {\r\n\t\t\tcontent: '';\r\n\t\t\tposition: absolute;\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 2px;\r\n\t\t\tbackground-color: white;\r\n\t\t\ttransform: rotate(45deg);\r\n\t\t}\r\n\t\t&::after {\r\n\t\t\tcontent: '';\r\n\t\t\tposition: absolute;\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 2px;\r\n\t\t\tbackground-color: white;\r\n\t\t\ttransform: rotate(-45deg);\r\n\t\t}\r\n\t`,\r\n\tcontroller: css`\r\n\t\tposition: absolute;\r\n\t\tbottom: 0;\r\n\t\twidth: 100%;\r\n\t\theight: calc(100% - 70px);\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tgrid-gap: 30px;\r\n\t\tpadding: 0 20px 20px 20px;\r\n\t\topacity: 0;\r\n\t\ttransform: translateY(100%);\r\n\t\ttransition: transform 1s, opacity 0.5s;\r\n\t`,\r\n\tactiveController: css`\r\n\t\ttransform: translateY(0);\r\n\t\topacity: 1;\r\n\t`,\r\n\tbtnContainer: css`\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 1fr;\r\n\t\tgrid-gap: 10px;\r\n\t`,\r\n\tinputContainer: css`\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t\theight: 80px;\r\n\t\tdisplay: flex;\r\n\t\tgrid-gap: 10px;\r\n\t`,\r\n\tlinkButtonContainer: css`\r\n\t\tposition: absolute;\r\n\t\tbottom: 0;\r\n\t\twidth: 100%;\r\n\t\tpadding: 10px;\r\n\t\tdisplay: flex;\r\n\t`\r\n}\r\n","import { motion } from 'framer-motion';\nimport React, { useRef, VFC } from 'react';\nimport { css } from '@emotion/css';\nimport { createTheme, ThemeProvider } from '@mui/material';\nimport { Background } from './Background';\nimport { FiltersPanel } from './FiltersPanel';\nimport { NavigationController } from './navigator/NavigationController';\n\nexport const App: VFC = () => {\n\tconst screenRef = useRef<HTMLDivElement>(null)\n\n\treturn (\n\t\t<ThemeProvider theme={darkTheme}>\n\t\t\t<motion.div ref={screenRef} className={styles.container}>\n\t\t\t\t<Background />\n\t\t\t\t<FiltersPanel screenRef={screenRef} />\n\t\t\t\t<NavigationController />\n\t\t\t</motion.div>\n\t\t</ThemeProvider>\n\t)\n}\n\nconst darkTheme = createTheme({\n\tpalette: {\n\t\tmode: 'dark'\n\t}\n})\n\nconst styles = {\n\tcontainer: css`\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 100vh;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\toverflow: hidden;\n\t\tbackground: linear-gradient(45deg, #354458 50%, #29aba4 50%);\n\n\t\t&::before {\n\t\t\tcontent: '';\n\t\t\tposition: absolute;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tclip-path: polygon(0 0, 100% 0, 100% 30%, 0 70%);\n\t\t\tbackground: linear-gradient(-80deg, #e9e0d6 60%, #3a9ad9 60%);\n\t\t}\n\t`,\n\ttext: css`\n\t\tcolor: white;\n\t\tfont-size: 5rem;\n\t`\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<RecoilRoot>\n\t\t\t<App />\n\t\t</RecoilRoot>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}